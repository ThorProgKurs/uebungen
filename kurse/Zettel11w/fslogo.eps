%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (fslogo.eps)
%%CreationDate: (2009-09-28T19:44:31+02:00)
%%BoundingBox: 0 0 29 31
%%HiResBoundingBox: 0 0 28.8001 31
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 29 31
userdict begin
DisplayImage
0 0
28.8001 31.2001
12.000000
120 130
1
1
1
1
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000001FFFFFFFFFFFF000
000000000000000FFFFFFFFFFFF000000000000000000FFFFFFFFFFFF000000000000000000FFF
FFFFFFFFFFF03FFF07FFF8003F0FFFFFFFFFFFFFFC1FFF0FFFFF801F0FFFFFFFFFFFFFFE1FFF0F
FFFFF0070FFFFFFFFFFFFFFE1FFE1FFFFFFC030FFFFFFFFFFFFFFE1FFE1FFFFFFE010FFFFFFFFF
FFFFFE1FFE1FFFFFFF800FFFFFFFFFFFFFFE1FFE1FFFFFFFC00FFFFFFFFFFFFFFE1FFE1FFFFFFF
E00FFFFFFFFFFFFFFE1FFE1FFFFFFFF00FFFFFFFFFFFFFFE1FFE1FFFFFFFF80FFFFFFFFFFFFFFE
1FFE1FFFFFFFF80FFFFFFFFFFFFFFE1FFE1FFFFFFFFC0FFFFFFFFFFFFFFE1FFE1FFFFFFFFC0FFF
FFFFFFFFFFFE1FFE1FFFFFFFFE0FFFFFFFFFFFFFFE1FFE1FFFFFFFFE0FFFFFFFFFFFFFFE1FFE1F
FFFF7FFE0FFFFFFFFFFFFFFE1FFE1FFFFE1FFE0FFFFFFFFFFFFFFE1FFE1FFFFE1FFF0FFFFFFFFF
FFFFFE1FFE1FFFFE1FFF0FFFFFFFFFFFFFFE1FFE1FFFFE1FFF0FFFFFFFFFFFFFFE1FFE1FFFFE1F
FFFFFFFFFFFFFFFFFE1FFE1FFFFE1FFFFFFFFFFFFFFFFFFE1FFE1FFFFE1FFFFFFFFFFFFFFFFFFE
1FFE1FFFFC1FFFFFFFFFFFFFFFFFFE1FFE1FFFFC1FFFFFFFFFFFFFFFFFFE1FFE1FFFFC1FFFFFFF
FFFFFFFFFFFE1FFE1FFFF81FFFFFFFFFFFFFFFFFFE1FFE1FFFF81FFFFFFFFFFFFFFFFFFE1FFE1F
FFF01FFFFFFFFFFFFFFFFFFE1FFE1FFFF01FFFFFFFFFFFFFFFFFFE1FFE1FFFE01FFFFFFFFFFFFF
FFFFFE1FFE1FFFC01FFFFFFFFFFFFFFFFFFE1FFE1FFF801FFFFFFFFFFFFFFFFFFE1FFE1FFE021F
FFFFFFFFFFFFFFFFFE1FFE1FF8061FFFFFFFFFFFFFFFFFFE1FFE1F800E1FFFFFFFFFFFFFFFFFFE
1FFE00001E1FFFFFFFFFFFFFFFFFFE1FFE00007E1FFFFFFFFFFFFFFFFFFE1FFE0000FE1FFFFFFF
FFFFFFFFFFFE1FFE00003E1FFFFFFFFFFFFFFFFFFE1FFE00001E1FFFFFFFFFFFFFFFFFFE1FFE1F
E0061FFFFFFFFFFFFFFFFFFE1FFE1FFC021FFFFFFFFFFFFFFFFFFE1FFE1FFF001FFFFFFFFFFFFF
FFFFFE1FFE1FFF801FFFFFFFFFFFFFFFFFFE1FFE1FFFC01FFFFFFFFFFFFFFFFFFE1FFE1FFFE01F
FFFFFFFFFFFFFFFFFE1FFE1FFFF01FFFFFFFFFFFFFFFFFFE1FFE1FFFF81FFFFFFFFFFFFFFFFFFE
1FFE1FFFF81FFFFFFFFFFFFFFFFFFE1FFE1FFFF81FFFFFFFFFFFFFFFFFFE1FFE1FFFFC1FFFFFFF
FFFFFFFFFFFE1FFE1FFFFC1FFFFFFFFFFFFFFFFFFE1FFE1FFFFC1FFFFFFFFFFFFFFFFFFE1FFE1F
FFFC1FFFFFFFFFFFFFFFFFFE1FFE1FFFFC1FFFFFFFFFFFFFFFFFFE1FFE1FFFFE1FFFFFFFFFFFFF
FFFFFE1FFE1FFFFE1FFFFFFFFFFFFFFFFFFE1FFE1FFFFF3FFFFFFFFFFFFFFFFFFE1FFE1FFFFFFF
FFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE
1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFF
FFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1F
FFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFF
FFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFF
FFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE
1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE1FFE0FFFFFFFFFFFFF
FFFFFFFFFFFC1FFF0FFFFFFFFFFFFFFFFFFFFFFFF03FFF01FFFFFFFFFFFFFFFFFFFFF000000000
00FFFFFFFFFFFFFFFFFFF000000000007FFFFFFFFFFFFFFFFFF000000000007FFFFFFFFFFFFFFF
FFF00000000000FFFFFFFFE07E7FFFFFFFFFFFFFFFFFFFFFFFFF801C7FFFFFFFFFFFFFFFFFFFFF
FFFE0F807FFFFFFFFFFFFFFFFFFFFFFFFE1FC0FFFFFFFFFFFFFFFFFFFFFFFFFC3FE0FFFFFFFFFF
FFFFFFFFFFFFFFF83FF0FFFFFFFFFFFFFFFFFFFFFFFFF83FF0FFFFFFFFFFFFFFFFFFFFFFFFF83F
F8FFFFFFFFFFFFFFFFFFFFFFFFF81FF9FFFFFFFFFFFFFFFFFFFFFFFFF81FF9FFFFFFFFFFFFFFFF
FFFFFFFFF80FF9FFFFFFFFFFFFFFFFFFFFFFFFFC07FFFFFFFFFFFFFFFFFFFFFFFFFFFC03FFFFFF
FFFFFFFFFFFFFFFFFFFFFE03FFFFFFFFFFFFFFFFFFFFFFFFFFFE01FFFFFFFFFFFFFFFFFFFFFFFF
FFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFF807FFFFFFFFFFFFFFFFFFFFFFFFFFFC03FFFFFFFFFFF
FFFFFFFFFFFFFFFFE03FFFFFFFFFFFFFFFFFFFFFFFFFFFE01FFFFFFFFFFFFFFFFFFFFFFFFFFFF0
1FFFFFFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFFFFFFFFF3FFC0FFFFFFFFFFFFFFFFF
FFFFFFFF3FFC0FFFFFFFFFFFFFFFFFFFFFFFFF3FFE0FFFFFFFFFFFFFFFFFFFFFFFFE3FFE0FFFFF
FFFFFFFFFFFFFFFFFFFE1FFE0FFFFFFFFFFFFFFFFFFFFFFFFE1FFE1FFFFFFFFFFFFFFFFFFFFFFF
FE1FFE1FFFFFFFFFFFFFFFFFFFFFFFFE0FFC3FFFFFFFFFFFFFFFFFFFFFFFFE07F83FFFFFFFFFFF
FFFFFFFFFFFFFC01F0FFFFFFFFFFFFFFFFFFFFFFFFFCE001FFFFFFFFFFFFFFFFFFFFFFFFFCFC07
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
end
%%PageTrailer
%%Trailer
%%EOF
